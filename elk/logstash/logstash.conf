input {
  file {
    type => "nginx_access"
    path => "/var/log/nginx/access.log"
    start_position => beginning
  }
  # file {
  #   type => "symfony_dev"
  #   path => "/var/www/symfony/app/logs/dev.log"
  #   start_position => beginning
  # }
  # file {
  #   type => "symfony_prod"
  #   path => "/var/www/symfony/app/logs/prod.log"
  #   start_position => beginning
  # }
}

filter {
  if [type] == "nginx_access" {
    grok {
      patterns_dir => "./patterns"
      match => { "message" => "%{NGINXACCESS}"}
    }
  }
  # else if [type] in ["symfony_dev", "symfony_prod"] {
  #   grok {
  #     patterns_dir => "./patterns"
  #     match => { "message" => "%{SYMFONY}"}
  #   }
  # }
  
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

output {
  elasticsearch {
    host => "localhost"
    cluster => "logstash"
  }
}